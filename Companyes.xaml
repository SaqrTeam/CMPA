<Window x:Class="CMPA.Companyes"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CMPA"
        mc:Ignorable="d"
        Title="AddComp" Height="700" Width="1200"
        WindowStartupLocation="CenterScreen" AllowsTransparency="True"
        WindowStyle="None" ResizeMode="CanResizeWithGrip"
        Background="{x:Null}" Foreground="{x:Null}" Loaded="Window_Loaded" SizeChanged="Window_SizeChanged">

    <Window.Resources>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ImageBrush x:Key="min_max_Icon" ImageSource="Imgs/Dash/Min1.png"></ImageBrush>

        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="Min-MaxStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource min_max_Icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource min_max_Icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Create btn Color -->
        <LinearGradientBrush x:Key="border_color" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFA41AC5"/>
            <GradientStop Color="#FF2621D8" Offset="1"/>
        </LinearGradientBrush>
        <!-- Row Color -->
        <LinearGradientBrush x:Key="RowBackColor" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFE36CFF"/>
            <GradientStop Color="#FF5244EF" Offset="1"/>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="btnNextStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!-- <Setter Property="Background" TargetName="border" Value="#FF000E8C"/> -->
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource border_color}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF000E8C"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource border_color}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- textBox Style -->
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource border_color}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource border_color}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="7*"/>
            <RowDefinition Height="43*"/>
        </Grid.RowDefinitions>
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.7,1" StartPoint="0.5,0">
                <GradientStop Color="#FF000E8C"/>
                <GradientStop Color="Black" Offset="1"/>
            </LinearGradientBrush>
        </Grid.Background>

        <Label Content="CMA" FontSize="30" Height="46"
               VerticalAlignment="Top" HorizontalAlignment="Left"
               Width="101" Foreground="#FF9C90D8"/>

        <Canvas HorizontalAlignment="Right" Width="45" Height="46" VerticalAlignment="Top">
            <Button Style="{StaticResource LoginShutStyle}" Height="45" Width="45" BorderThickness="0" Click="Button_Click" >
                <Button.Background>
                    <ImageBrush ImageSource="Imgs/Login/exit1.png" />
                </Button.Background>
            </Button>
            <Button Style="{StaticResource LoginPDownStyle}" Height="45" Width="45" BorderThickness="0" Canvas.Right="90" Click="Button_Click_1"   >
                <Button.Background>
                    <ImageBrush ImageSource="Imgs/Login/pDown.png" />
                </Button.Background>
            </Button>
            <Button Style="{DynamicResource Min-MaxStyle}" Height="45" Width="45" BorderThickness="0" Canvas.Right="45" Click="Button_Click_2" >
                <Button.Background>
                    <ImageBrush ImageSource="Imgs/Dash/min.png" />
                </Button.Background>
            </Button>
        </Canvas>
        <!-- DataGrid  -->
        <DataGrid x:Name="dataGrid" Grid.Row="1" IsReadOnly="True"
                  Margin="10,10,10,10" Background="{x:Null}" 
                  Foreground="White" SelectionMode="Single"
                  SelectionUnit="Cell" FontSize="15" 
                  >

            <!-- Font & Color ... -->
            <DataGrid.Resources>

                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="BlueViolet"></Setter>
                    <Setter Property="FontSize" Value="19"></Setter>
                    <Setter Property="BorderThickness" Value="0,0,1,2"></Setter>
                    <Setter Property="BorderBrush" Value="#FF283CDC"></Setter>
                    
                </Style>
            </DataGrid.Resources>
            <DataGrid.RowBackground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF000E8C"/>
                    <GradientStop Color="Black" Offset="1"/>
                </LinearGradientBrush>
            </DataGrid.RowBackground>

            <!-- Column & Text ... -->

            <DataGrid.Columns>
                <!--Binding="{Binding }"-->
                <DataGridTextColumn Header="Company name"  Width="*" Binding="{Binding Name}" />
                <DataGridTextColumn Header="Employee Count" Width="*" Binding="{Binding WorkerLength }" />

            </DataGrid.Columns>

        </DataGrid>
        <Label Content="All Companyes" FontSize="30"
            HorizontalAlignment="Center"
            Width="254" Foreground="#FF9C90D8" Margin="0,39,0,10"/>

        <!-- Erorr Box -->
        <Border x:Name="ErrBox" Margin="-245,40,0,600" Grid.Row="0" CornerRadius="0,40,40,0" Width="245" 
                        HorizontalAlignment="Left" Opacity="0.8" Grid.RowSpan="2">
            <Border.Background>
                <LinearGradientBrush EndPoint="0.2,1" StartPoint="0.7,0">
                    <GradientStop Color="#FF6B97D2" Offset="0"/>
                    <GradientStop Color="#FFCDE2FF" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>

            <Grid Visibility="Visible" Height="60" Width="245" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,-2,0,0">

                <TextBlock x:Name="txtMessage" Text="Test" FontSize="14"
                                   Height="30" Width="190" Margin="0,4,35,5" Foreground="#FF3B84BD" />

                <Image Height="30" Width="30" Margin="193,4,5,5" Source="Err.png"/>
            </Grid>
        </Border>

    </Grid>
</Window>
